/*
 saa 7128


 */

//====================================================================
// uses
#include	<GrLnxApp.h>
#include	<GrTypeBase.h>
#include	<GrDumyTool.h>
#include	<GrStrTool.h>

#include	<Hw/Saa7128/GrHwSaa7128.h>

//====================================================================
//local const
#define E_GrHwSaa7128RegCnt					128

#define	E_GrHwSaa7128RegPage1Cnt		8
#define	E_GrHwSaa7128RegPage2Cnt		0x48

#define E_GrHwSaa7128RegPage1Adr		0x26
#define E_GrHwSaa7128RegPage2Adr		0x38


//====================================================================
//local type

//====================================================================
//local function

//====================================================================
//var

__u8		V_R2HwSa7128RegNtscP1[E_GrHwSaa7128RegPage1Cnt]	=	
{ 0x0d, 0x00, 0x59, 0x1d, 0x75, 0x3f, 0x06, 0x3f };
//{	0x0d, 0x00, 0x59, 0x1d, 0x75, 0x3f, 0x06, 0x3f };
__u8		V_R2HwSa7128RegNtscP2[E_GrHwSaa7128RegPage2Cnt]	=	
{																									0x1a, 0x1a, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00,	// 3
	0x00, 0x00, 0x00, 0x68, 0x10, 0x97, 0x4c, 0x18, 0x9b, 0x93, 0x9f, 0xff, 0x7c, 0x34, 0x3f, 0x3f,	// 4
	0x3f, 0x83, 0x83, 0x80, 0x0d, 0x0f, 0xc3, 0x06, 0x02, 0x80, 0x71, 0x77, 0xa7, 0x6B, 0x66, 0x2e,	// 5
	0x7b, 0x11, 0x4f, 0x1f, 0x7c, 0xf0, 0x21, 0x77, 0x41, 0x88, 0x41, 0x12, 0xed, 0x10, 0x10, 0x00,	// 6
	0x41, 0xc3, 0x00, 0x3e, 0xb8, 0x02, 0x00, 0x00, 0x00, 0x00, 0x08, 0x02, 0xC0, 0x00, 0xff, 0xff
};
//{	0x1a, 0x1a, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00,	/*	address = 0x3X	*/
//	0x00, 0x00, 0x00, 0x68, 0x10, 0x97, 0x4c, 0x18, 0x9b, 0x93, 0x9f, 0xff, 0x7c, 0x34, 0x3f, 0x3f,	/*	address = 0x4X	*/
//	0x3f, 0x83, 0x83, 0x80, 0x0d, 0x0f, 0xc3, 0x06, 0x02, 0x80, 0x71, 0x77, 0xa7, 0x67, 0x66, 0x2e,	/*	address = 0x5X	*/
//	0x7b, 0x11, 0x4f, 0x1f, 0x7c, 0xf0, 0x21, 0x77, 0x41, 0x88, 0x41, 0x12, 0xed, 0x10, 0x10, 0x14,	/*	address = 0x6X	*/
//	0x41, 0xc3, 0x00, 0x3e, 0xb8, 0x02, 0x15, 0x16, 0x15, 0x16, 0x08, 0xff, 0x80, 0x00, 0x00, 0x00	/*	address = 0x7X	*/
//};

__u8		V_R2HwSa7128RegPalP1[E_GrHwSaa7128RegPage1Cnt]	=	
{	0x0d, 0x00, 0xE1, 0x1d, 0x75, 0x3f, 0x06, 0x3f };
__u8		V_R2HwSa7128RegPalP2[E_GrHwSaa7128RegPage2Cnt]	=	
{																									0x1a, 0x1a, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00,	// 3
	0x00, 0x00, 0x00, 0x68, 0x10, 0x97, 0x4c, 0x18, 0x9b, 0x93, 0x9f, 0xff, 0x7c, 0x34, 0x3f, 0x3f,	// 4
	0x3f, 0x83, 0x83, 0x80, 0x0d, 0x0f, 0xc3, 0x06, 0x02, 0x80, 0x0F, 0x77, 0xa7, 0x6B, 0x66, 0x2e,	// 5
	0x7b, 0x02, 0x35, 0xCB, 0x8A, 0x09, 0x2A, 0x77, 0x41, 0x88, 0x41, 0x12, 0xF1, 0x10, 0x20, 0x00,	// 6
	0x41, 0xc3, 0x00, 0x3e, 0xb8, 0x02, 0x00, 0x00, 0x00, 0x00, 0x18, 0x30, 0xC0, 0x00, 0xff, 0xff
};
//{	0x1a, 0x1a, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00,	/*	address = 0x3X	*/
//	0x00, 0x00, 0x00, 0x68, 0x10, 0x97, 0x4c, 0x18, 0x9b, 0x93, 0x9f, 0xff, 0x7c, 0x34, 0x3f, 0x3f,	/*	address = 0x4X	*/
//	0x3f, 0x83, 0x83, 0x80, 0x0d, 0x0f, 0xc3, 0x06, 0x02, 0x80, 0x0F, 0x77, 0xa7, 0x67, 0x66, 0x2e,	/*	address = 0x5X	*/
//	0x7b, 0x02, 0x35, 0xCB, 0x8A, 0x09, 0x2A, 0x77, 0x41, 0x88, 0x41, 0x12, 0xF1, 0x10, 0x20, 0x14,	/*	address = 0x6X	*/
//	0x41, 0xc3, 0x00, 0x3e, 0xb8, 0x02, 0x15, 0x16, 0x15, 0x16, 0x12, 0x24, 0x40, 0x00, 0x00, 0x00	/*	address = 0x7X	*/
/*	0			1			2			3			4			5			6			7			8			9			A			B			C			D			E			F		*/
//};

//====================================================================
Cls_GrHwSaa7128::Cls_GrHwSaa7128( __u8 A_I2cCh, __u32 A_Adr )
{
		m_I2cCh			=	A_I2cCh;
		m_Adr				=	(__u8)A_Adr;

		//init register value
		m_IsSigPal	=	FALSE;
}
//--------------------------------------------------------------------
Cls_GrHwSaa7128::~Cls_GrHwSaa7128()
{
}
//--------------------------------------------------------------------
void		Cls_GrHwSaa7128::WriteReg( __u8 A_RegAdr, __u8 A_RegVal )
{
		GrI2cStdWrite( m_I2cCh, m_Adr, A_RegAdr, &A_RegVal, 1 );
}
//--------------------------------------------------------------------
void		Cls_GrHwSaa7128::SetSigType( __u32 A_IsPal )
{
	// local -------------------
		__u32		Tv_WkIdx;
		__u8*		Tv_PtrVal;
		__u8		Tv_Adr;
	// code --------------------
		//page1
		Tv_PtrVal		=	V_R2HwSa7128RegNtscP1;
		if ( A_IsPal )
		{
			Tv_PtrVal		=	V_R2HwSa7128RegPalP1;
		}
		Tv_Adr		=	E_GrHwSaa7128RegPage1Adr;
		for ( Tv_WkIdx =0;Tv_WkIdx < E_GrHwSaa7128RegPage1Cnt;Tv_WkIdx++ )
		{
			WriteReg( Tv_Adr, *Tv_PtrVal );
			//next
			Tv_PtrVal ++;
			Tv_Adr ++;
		}
		
		//page2
		Tv_PtrVal		=	V_R2HwSa7128RegNtscP2;
		if ( A_IsPal )
		{
			Tv_PtrVal		=	V_R2HwSa7128RegPalP2;
		}
		Tv_Adr		=	E_GrHwSaa7128RegPage2Adr;
		for ( Tv_WkIdx =0;Tv_WkIdx < E_GrHwSaa7128RegPage2Cnt;Tv_WkIdx++ )
		{
			if ( (0x60 != Tv_Adr) && (0x7D != Tv_Adr) )
			{
				WriteReg( Tv_Adr, *Tv_PtrVal );
			}
			//next
			Tv_PtrVal ++;
			Tv_Adr ++;
		}

		//update signal type
		m_IsSigPal	=	A_IsPal;		
}
//--------------------------------------------------------------------
BOOL8		Cls_GrHwSaa7128::IsSigPal( void )
{
		return	m_IsSigPal;
}
//--------------------------------------------------------------------

